@startuml

class LoanApplicationDecisionService <<application service>>{

    void RejectApplication(string applicationNumber, string login)
    void AcceptApplication(string applicationNumber, string login)
}
interface IUnitOfWork {
    void CommitChanges()
}
class EfUnitOfWork {
 
}
class EfLoanApplicationRepository{
}
interface ILoanApplicationRepository{
    void Add(LoanApplication application)
    LoanApplication WithNumber(LoanApplicationNumber loanApplicationNumber)
}
class EfOperatorRepository{
}

interface IOperatorRepository{
    void Add(Operator @operator)
    Operator WithLogin(Login login)
}
class MassTransitEventPublisher{
    
}
interface IEventPublisher{
    void Publish<TEvent>(TEvent message)
}

LoanApplicationDecisionService  ..> IUnitOfWork :<<uses>>
LoanApplicationDecisionService  ..> IEventPublisher :<<uses>>
LoanApplicationDecisionService  ..> ILoanApplicationRepository :<<uses>>
LoanApplicationDecisionService  ..> IOperatorRepository :<<uses>>

EfUnitOfWork -up-> IUnitOfWork
EfLoanApplicationRepository -up-> ILoanApplicationRepository
EfOperatorRepository -up-> IOperatorRepository
MassTransitEventPublisher -up-> IEventPublisher

@enduml